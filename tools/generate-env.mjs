// tools/generate-env.mjs
import { writeFileSync, mkdirSync } from 'node:fs'
import { dirname } from 'node:path'
import { fileURLToPath } from 'node:url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

// Collect env vars starting with TEVET*
const re = /^TEVET/i
const env = {}
for (const k of Object.keys(process.env)) {
  if (re.test(k)) env[k] = process.env[k]
}

const out = `// Auto-generated by tools/generate-env.mjs. Do not edit.
(function () {
  const env = ${JSON.stringify(env, null, 2)};
  if (typeof globalThis !== 'undefined') {
    globalThis.process = globalThis.process || {};
    globalThis.process.env = Object.assign({}, globalThis.process.env, env);
  }
})();`

const outPath = new URL('../src/scripts/process-env.js', import.meta.url).pathname
mkdirSync(dirname(outPath), { recursive: true })
writeFileSync(outPath, out, 'utf8')
console.log('Wrote', outPath)
