name: Semantic Release

on:
  workflow_run:
    workflows: ["Publish In github page"]
    types:
      - completed
    branches:
      - master

jobs:
  semantic_release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Install dependencies
      run: pnpm install
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: deploy_dist
        path: dist/tevet-troc-client
        
    - name: Install semantic-release
      run: pnpm add -D semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github
      
    - name: Create .releaserc.json
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["master"],
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            ["@semantic-release/changelog", {
              "changelogFile": "CHANGELOG.md"
            }],
            ["@semantic-release/npm", {
              "npmPublish": false
            }],
            ["@semantic-release/git", {
              "assets": ["package.json", "CHANGELOG.md"],
              "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
            }],
            ["@semantic-release/github", {
              "assets": [
                {"path": "dist/**/*.zip", "label": "Distribution"},
                {"path": "LICENSE", "label": "License"},
                {"path": "README.md", "label": "Readme"}
              ]
            }]
          ]
        }
        EOF
        
    - name: Run semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npx semantic-release

